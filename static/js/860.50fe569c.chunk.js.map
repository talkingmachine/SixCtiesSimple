{"version":3,"file":"static/js/860.50fe569c.chunk.js","mappings":"sLAAaA,EAAgB,uE,qECiG7B,MAtFA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,QAAgC,MAC3CC,GAAcD,EAAAA,EAAAA,QAAgC,MAC9CE,GAAWC,EAAAA,EAAAA,MAyBjB,OAxBqBC,EAAAA,EAAAA,GAAiBC,EAAAA,KAGpCH,EAASI,EAAAA,EAAAA,OAsBT,iBAAKC,UAAU,8BAA6B,WAC1C,gBAAKC,MAAO,CAACC,QAAS,QAAQ,UAC5B,iBAAKC,MAAM,6BAA4B,WAAC,mBAAQC,GAAG,oBAAoBC,QAAQ,UAAS,UAAC,iBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,iDAAuD,mBAAQJ,GAAG,gBAAgBC,QAAQ,YAAW,UAAC,iBAAMG,EAAE,gJAAsJ,mBAAQJ,GAAG,YAAYC,QAAQ,YAAW,UAAC,iBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,0HAEte,mBAAQR,UAAU,SAAQ,UACxB,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,eAAc,UAC3B,SAAC,KAAI,CAACA,UAAU,oBAAoBS,GAAIV,EAAAA,EAAAA,KAAiB,UACvD,gBAAKC,UAAU,eAAeU,IAAKC,EAAAA,EAAYC,IAAI,gBAAgBC,MAAO,GAAIC,OAAQ,gBAMhG,iBAAMd,UAAU,+BAA8B,UAC5C,iBAAKA,UAAU,kCAAiC,WAC9C,qBAASA,UAAU,QAAO,WACxB,eAAIA,UAAU,eAAc,sBAC5B,kBAAMe,SAtCW,SAACC,GAC1B,IAA0BC,EACJC,GACtBF,EAAIG,kBAEAzB,EAAY0B,UAJUH,EAImBvB,EAAY0B,QAAQC,MAJlB,YAAYC,KAAKL,IAAa,SAASK,KAAKL,KAQvFzB,EAAS4B,SAAW1B,EAAY0B,UAPdF,EAOsC1B,EAAS4B,QAAQC,MAPrChC,EAAciC,KAAKJ,KAQzD5B,GAASiC,EAAAA,EAAAA,GAAY,CAACC,SAAU,CAC9BN,MAAO1B,EAAS4B,QAAQC,MACxBJ,SAAUvB,EAAY0B,QAAQC,UANhCI,EAAAA,GAAAA,KAAW,2DAUf,EAsB8CzB,UAAU,mBAAmB0B,OAAO,IAAIC,OAAO,OAAM,WACvF,iBAAK3B,UAAU,2CAA0C,WACvD,kBAAOA,UAAU,kBAAiB,qBAClC,kBAAO4B,IAAKpC,EACVQ,UAAU,2BACV6B,KAAK,QACLC,KAAK,QACLC,YAAY,QACZC,UAAQ,QAGZ,iBAAKhC,UAAU,2CAA0C,WACvD,kBAAOA,UAAU,kBAAiB,uBAClC,kBAAO4B,IAAKlC,EACVM,UAAU,2BACV6B,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,UAAQ,QAGZ,mBAAQhC,UAAU,oCAAoC6B,KAAK,SAAQ,4BAGvE,oBAAS7B,UAAU,gDAA+C,UAChE,gBAAKA,UAAU,kBAAiB,UAC9B,SAAC,KAAI,CAACA,UAAU,uBAAuBS,GAAIV,EAAAA,EAAAA,KAAiB,UAC1D,qDAQhB,C","sources":["const/regex.ts","pages/login-page/loginPage.tsx"],"sourcesContent":["export const REG_EXP_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n","import { FormEvent, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { REG_EXP_EMAIL } from '../../const/regex';\nimport RouterPaths from '../../const/routerPaths';\nimport { useDispatchTyped, useSelectorTyped } from '../../hooks/typedWrappers';\nimport headerLogo from '../../img/logo.svg';\nimport { loginAction } from '../../store/apiActions';\nimport { authorizationStatusSelector } from '../../store/selectors';\nimport { toast } from 'react-toastify';\n\n\nfunction LoginPage ():JSX.Element {\n  const dispatch = useDispatchTyped();\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n  const navigate = useNavigate();\n  const isAuthorized = useSelectorTyped(authorizationStatusSelector);\n\n  if (isAuthorized) {\n    navigate(RouterPaths.main);\n  }\n\n  const signInButtonHandle = (evt: FormEvent<HTMLFormElement>) => {\n    const isPasswordStrong = (password: string) => /[a-zA-Z]/g.test(password) && /[0-9]/g.test(password);\n    const isEmailValid = (email: string) => REG_EXP_EMAIL.test(email);\n    evt.preventDefault();\n\n    if (passwordRef.current && !isPasswordStrong(passwordRef.current.value)) {\n      toast.warn('Password must contain at least one letter and one number');\n      return;\n    }\n    if (loginRef.current && passwordRef.current && isEmailValid(loginRef.current.value)) {\n      dispatch(loginAction({authData: {\n        email: loginRef.current.value,\n        password: passwordRef.current.value\n      }}));\n    }\n\n  };\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\" /></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\" /></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\" /></symbol></svg>\n      </div>\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link\" to={RouterPaths.main}>\n                <img className=\"header__logo\" src={headerLogo} alt=\"6 cities logo\" width={81} height={41} />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form onSubmit={signInButtonHandle} className=\"login__form form\" action=\"#\" method=\"post\">\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input ref={loginRef}\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input ref={passwordRef}\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n              </div>\n              <button className=\"login__submit form__submit button\" type=\"submit\">Sign in</button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link className=\"locations__item-link\" to={RouterPaths.main}>\n                <span>Amsterdam</span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"names":["REG_EXP_EMAIL","dispatch","useDispatchTyped","loginRef","useRef","passwordRef","navigate","useNavigate","useSelectorTyped","authorizationStatusSelector","RouterPaths","className","style","display","xmlns","id","viewBox","fillRule","clipRule","d","to","src","headerLogo","alt","width","height","onSubmit","evt","password","email","preventDefault","current","value","test","loginAction","authData","toast","action","method","ref","type","name","placeholder","required"],"sourceRoot":""}